{
  "openapi": "3.0.1",
  "info": {
    "title": "MonkeyScheduler API",
    "version": "v1"
  },
  "paths": {
    "/api/dag-workflow/validate": {
      "post": {
        "tags": [
          "DagWorkflow"
        ],
        "parameters": [
          {
            "name": "workflowId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ScheduledTask"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ScheduledTask"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ScheduledTask"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowValidationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowValidationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowValidationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/dag-workflow/detect-cycles": {
      "post": {
        "tags": [
          "DagWorkflow"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ScheduledTask"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ScheduledTask"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ScheduledTask"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CycleDetectionResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CycleDetectionResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CycleDetectionResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/dag-workflow/check-dependencies": {
      "post": {
        "tags": [
          "DagWorkflow"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DependencyCheckRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DependencyCheckRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DependencyCheckRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DependencyCheckResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DependencyCheckResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DependencyCheckResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/dag-workflow/dependency-paths": {
      "post": {
        "tags": [
          "DagWorkflow"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ScheduledTask"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ScheduledTask"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ScheduledTask"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/dag-workflow/start": {
      "post": {
        "tags": [
          "DagWorkflow"
        ],
        "parameters": [
          {
            "name": "workflowId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ScheduledTask"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ScheduledTask"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ScheduledTask"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DagExecutionResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DagExecutionResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DagExecutionResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/dag-workflow/status/{workflowId}": {
      "get": {
        "tags": [
          "DagWorkflow"
        ],
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowExecutionStatus"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowExecutionStatus"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowExecutionStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/dag-workflow/pause/{workflowId}": {
      "post": {
        "tags": [
          "DagWorkflow"
        ],
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/dag-workflow/resume/{workflowId}": {
      "post": {
        "tags": [
          "DagWorkflow"
        ],
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/dag-workflow/cancel/{workflowId}": {
      "post": {
        "tags": [
          "DagWorkflow"
        ],
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/LoadBalancing/strategies": {
      "get": {
        "tags": [
          "LoadBalancing"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/LoadBalancing/strategies/{strategyName}": {
      "get": {
        "tags": [
          "LoadBalancing"
        ],
        "parameters": [
          {
            "name": "strategyName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/LoadBalancing/status": {
      "get": {
        "tags": [
          "LoadBalancing"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/LoadBalancing/configuration": {
      "put": {
        "tags": [
          "LoadBalancing"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": { }
              }
            },
            "text/json": {
              "schema": {
                "type": "object",
                "additionalProperties": { }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "object",
                "additionalProperties": { }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/LoadBalancing/node-loads": {
      "get": {
        "tags": [
          "LoadBalancing"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/LoadBalancing/register-strategy": {
      "post": {
        "tags": [
          "LoadBalancing"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterStrategyRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterStrategyRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterStrategyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/RetryConfiguration": {
      "get": {
        "tags": [
          "RetryConfiguration"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RetryConfiguration"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetryConfiguration"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetryConfiguration"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "RetryConfiguration"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RetryConfiguration"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RetryConfiguration"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RetryConfiguration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/RetryConfiguration/strategies": {
      "get": {
        "tags": [
          "RetryConfiguration"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/RetryConfiguration/test-intervals": {
      "get": {
        "tags": [
          "RetryConfiguration"
        ],
        "parameters": [
          {
            "name": "baseInterval",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 60
            }
          },
          {
            "name": "strategy",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/RetryStrategy"
            }
          },
          {
            "name": "maxRetries",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 3
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/TaskHandlers/types": {
      "get": {
        "tags": [
          "TaskHandlers"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/TaskHandlers/config/{taskType}": {
      "get": {
        "tags": [
          "TaskHandlers"
        ],
        "parameters": [
          {
            "name": "taskType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/TaskHandlers/validate/{taskType}": {
      "post": {
        "tags": [
          "TaskHandlers"
        ],
        "parameters": [
          {
            "name": "taskType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { }
            },
            "text/json": {
              "schema": { }
            },
            "application/*+json": {
              "schema": { }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/TaskHandlers/configs": {
      "get": {
        "tags": [
          "TaskHandlers"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { }
                }
              }
            }
          }
        }
      }
    },
    "/api/TaskHandlers/supported/{taskType}": {
      "get": {
        "tags": [
          "TaskHandlers"
        ],
        "parameters": [
          {
            "name": "taskType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/Tasks": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaskRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaskRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaskRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "Tasks"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Tasks/{id}/enable": {
      "put": {
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Tasks/{id}/disable": {
      "put": {
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Tasks/{id}": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Tasks/status": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskExecutionResult"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskExecutionResult"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TaskExecutionResult"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Tasks/{id}/reset-retry": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Tasks/{id}/retry": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Tasks/{id}/retry-info": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Tasks/{id}/retry-config": {
      "put": {
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskRetryConfigRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskRetryConfigRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TaskRetryConfigRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/worker/register": {
      "post": {
        "tags": [
          "WorkerApi"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/worker/heartbeat": {
      "post": {
        "tags": [
          "WorkerApi"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateTaskRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "cronExpression": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "taskType": {
            "type": "string",
            "nullable": true
          },
          "taskParameters": {
            "type": "string",
            "nullable": true
          },
          "enableRetry": {
            "type": "boolean",
            "nullable": true
          },
          "maxRetryCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "retryIntervalSeconds": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "retryStrategy": {
            "$ref": "#/components/schemas/RetryStrategy"
          },
          "timeoutSeconds": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CycleDetectionResult": {
        "type": "object",
        "properties": {
          "hasCycle": {
            "type": "boolean"
          },
          "cycles": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "nullable": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DagExecutionResult": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "startedTaskCount": {
            "type": "integer",
            "format": "int32"
          },
          "workflowId": {
            "type": "string",
            "format": "uuid"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "DagExecutionStatus": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "format": "int32"
      },
      "DependencyCheckRequest": {
        "type": "object",
        "properties": {
          "task": {
            "$ref": "#/components/schemas/ScheduledTask"
          },
          "allTasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduledTask"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DependencyCheckResult": {
        "type": "object",
        "properties": {
          "isValid": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "missingDependencies": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "invalidDependencies": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExecutionStatus": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "RegisterStrategyRequest": {
        "type": "object",
        "properties": {
          "strategyName": {
            "type": "string",
            "nullable": true
          },
          "strategyTypeName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RetryConfiguration": {
        "type": "object",
        "properties": {
          "enableRetry": {
            "type": "boolean"
          },
          "defaultMaxRetryCount": {
            "type": "integer",
            "format": "int32"
          },
          "defaultRetryIntervalSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "defaultRetryStrategy": {
            "$ref": "#/components/schemas/RetryStrategy"
          },
          "defaultTimeoutSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "maxRetryIntervalSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "retryCooldownSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "disableTaskOnMaxRetries": {
            "type": "boolean"
          },
          "skipFailedNodes": {
            "type": "boolean"
          },
          "enableRetryLogging": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "RetryStrategy": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "ScheduledTask": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "cronExpression": {
            "type": "string",
            "nullable": true
          },
          "nextRunTime": {
            "type": "string",
            "format": "date-time"
          },
          "enabled": {
            "type": "boolean"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "taskType": {
            "type": "string",
            "nullable": true
          },
          "taskParameters": {
            "type": "string",
            "nullable": true
          },
          "enableRetry": {
            "type": "boolean"
          },
          "maxRetryCount": {
            "type": "integer",
            "format": "int32"
          },
          "retryIntervalSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "retryStrategy": {
            "$ref": "#/components/schemas/RetryStrategy"
          },
          "currentRetryCount": {
            "type": "integer",
            "format": "int32"
          },
          "nextRetryTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "timeoutSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dependencies": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "nextTaskIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "dagStatus": {
            "$ref": "#/components/schemas/DagExecutionStatus"
          },
          "completedDependenciesCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalDependenciesCount": {
            "type": "integer",
            "format": "int32"
          },
          "isDagTask": {
            "type": "boolean",
            "readOnly": true
          },
          "dagWorkflowId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "dagPriority": {
            "type": "integer",
            "format": "int32"
          },
          "allowParallelExecution": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "TaskExecutionResult": {
        "type": "object",
        "properties": {
          "taskId": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "$ref": "#/components/schemas/ExecutionStatus"
          },
          "result": {
            "type": "string",
            "nullable": true
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "workerNodeUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "stackTrace": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TaskRetryConfigRequest": {
        "type": "object",
        "properties": {
          "enableRetry": {
            "type": "boolean",
            "nullable": true
          },
          "maxRetryCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "retryIntervalSeconds": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "retryStrategy": {
            "$ref": "#/components/schemas/RetryStrategy"
          },
          "timeoutSeconds": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WorkflowExecutionStatus": {
        "type": "object",
        "properties": {
          "workflowId": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "$ref": "#/components/schemas/WorkflowStatus"
          },
          "totalTasks": {
            "type": "integer",
            "format": "int32"
          },
          "completedTasks": {
            "type": "integer",
            "format": "int32"
          },
          "failedTasks": {
            "type": "integer",
            "format": "int32"
          },
          "runningTasks": {
            "type": "integer",
            "format": "int32"
          },
          "waitingTasks": {
            "type": "integer",
            "format": "int32"
          },
          "skippedTasks": {
            "type": "integer",
            "format": "int32"
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "progressPercentage": {
            "type": "number",
            "format": "double",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "WorkflowStatus": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "format": "int32"
      },
      "WorkflowValidationResult": {
        "type": "object",
        "properties": {
          "isValid": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "entryTasks": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "exitTasks": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "executionLevels": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}